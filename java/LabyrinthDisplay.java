import java.awt.Color;
import java.awt.Graphics;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;


	public class LabyrinthDisplay extends JFrame{
	int[][] Cells=
	    {{0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
		{0,1,0,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0},
		{0,1,1,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,1,0,1,0,1,0},
		{0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,0,1,0,1,0,1,0},
		{0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,1,1,1,1,1,0,1,0},
		{0,1,0,1,0,1,1,1,1,1,0,1,1,0,1,0,1,0,0,0,0,1,0,1,0},
		{0,1,0,1,0,0,0,0,0,0,0,1,1,0,1,0,1,0,1,1,0,1,0,1,0},
		{0,1,0,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,0,1,0,1,0},
		{0,1,0,1,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0},
		{0,1,0,1,0,1,1,1,1,1,1,0,1,0,0,0,1,1,1,1,0,1,0,1,0},
		{0,1,0,1,0,1,1,1,0,0,1,0,1,1,1,1,1,1,0,1,0,1,1,1,0},
		{0,1,0,1,0,0,0,1,0,0,1,1,1,0,0,0,0,0,0,1,0,1,1,1,0},
		{0,1,0,1,1,1,1,1,0,0,0,0,0,0,1,1,0,1,1,1,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0},
		{0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0},
		{0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,1,1,1,0,1,1,1,0},
		{0,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1,0,0,0},
		{0,1,0,1,0,0,0,1,0,1,0,0,1,1,0,1,1,1,0,1,0,1,0,1,0},
		{0,1,0,1,0,1,1,1,0,1,1,0,1,1,0,0,0,0,0,1,0,1,0,1,0},
		{0,1,0,1,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,1,0,1,0,1,0},
		{0,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,0,1,0,1,1,1,0},
		{0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,1,0},
		{0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,0},
		{0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};
     public LabyrinthDisplay() {
    	 setSize(800,800);
    	 setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
     }
	@Override
	public void paint(Graphics g) {
		super.paint(g);
		int i = 0;
		int j = 0;
		for (i = 0; i < 25; i++) {
			for (j = 0; j < 25; j++) {
				Color colors;
				switch (Cells[i][j]) {
				case 1:
					colors = Color.WHITE;
					g.setColor(colors);
					g.drawRect(i, j, 25, 25);
					g.setColor(colors);
					g.fillRect(i, j, 25, 25);
					break;
				case 0:
					colors = Color.darkGray;
					g.setColor(colors);
					g.setColor(colors);
					g.fillRect(i*25, j*25, 25, 25);
				}
				
			}

		}

	}
	public static void main(String args[]) {
		SwingUtilities.invokeLater(new Runnable() {
		@Override
		public void run() {
			LabyrinthDisplay run =new LabyrinthDisplay();
			run.setVisible(true);
			}
		});
	}
	}
	
